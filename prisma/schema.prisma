// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// user role
enum ROLE {
  USER
  ADMIN
}

enum InventoryMovementType {
  IN
  OUT
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  fullname  String    @unique
  email     String    @unique
  password  String
  role      ROLE      @default(USER)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  // Order     Order[]
  Profile   Profile[]
  Order     Order[]
}

model Profile {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  address   String
  city      String
  pincode   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User     @relation(fields: [userId], references: [id])
  userId    String   @unique @db.ObjectId
}

model Product {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  price       Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  Order     Order?      @relation(fields: [orderId], references: [id])
  orderId   String?     @db.ObjectId
  OrderItem OrderItem[]
  Inventory Inventory[]
}

model Inventory {
  id           String                 @id @default(auto()) @map("_id") @db.ObjectId
  quantity     Int
  movementType InventoryMovementType?
  product      Product                @relation(fields: [productId], references: [id])
  productId    String                 @db.ObjectId
}

model Order {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Product   Product[]
  OrderItem OrderItem[]
}

model OrderItem {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Order     Order?   @relation(fields: [orderId], references: [id])
  orderId   String?  @db.ObjectId
  Product   Product? @relation(fields: [productId], references: [id])
  productId String?  @db.ObjectId
}
