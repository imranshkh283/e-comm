// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  fullname  String    @unique
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  // Order     Order[]
  Profile   Profile[]
}

model Profile {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  address   String
  city      String
  pincode   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User     @relation(fields: [userId], references: [id])
  userId    String   @unique @db.ObjectId
}

model Product {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  price       Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  // Order       Order?      @relation(fields: [orderId], references: [id])
  // orderId     String?     @db.ObjectId
  // OrderItem   OrderItem[]
}

//
// model Order {
//   id        String      @id @default(auto()) @map("_id") @db.ObjectId
//   user      User        @relation(fields: [userId], references: [id])
//   userId    String      @db.ObjectId
//   createdAt DateTime    @default(now())
//   updatedAt DateTime    @updatedAt
//   Product   Product[]
//   OrderItem OrderItem[]
// }
//
// model OrderItem {
//   id        String   @id @default(auto()) @map("_id") @db.ObjectId
//   quantity  Int
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   Order     Order?   @relation(fields: [orderId], references: [id])
//   orderId   String?  @db.ObjectId
//   Product   Product? @relation(fields: [productId], references: [id])
//   productId String?  @db.ObjectId
// }
